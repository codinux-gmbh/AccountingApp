import kotlin.Boolean;


CREATE TABLE IF NOT EXISTS CreateInvoiceSettings (
    id INTEGER PRIMARY KEY,

    lastCreatedInvoice TEXT,

    showAllSupplierFields INTEGER AS Boolean NOT NULL,
    showAllCustomerFields INTEGER AS Boolean NOT NULL,
    showAllBankDetailsFields INTEGER AS Boolean NOT NULL,
    showAllPdfSettingsFields INTEGER AS Boolean NOT NULL,

    selectedServiceDateOption TEXT NOT NULL,
    selectedEInvoiceXmlFormat TEXT NOT NULL,
    selectedCreateEInvoiceOption TEXT NOT NULL,
    showGeneratedEInvoiceXml INTEGER AS Boolean NOT NULL,

    lastXmlSaveDirectory TEXT,
    lastPdfSaveDirectory TEXT,
    lastOpenFileDirectory TEXT,
    lastOpenLogoDirectory TEXT
);


getCreateInvoiceSettings:
SELECT * FROM CreateInvoiceSettings WHERE id = 1;

upsertCreateInvoiceSettings:
INSERT OR REPLACE INTO CreateInvoiceSettings (
    id,

    lastCreatedInvoice,

    showAllSupplierFields,
    showAllCustomerFields,
    showAllBankDetailsFields,
    showAllPdfSettingsFields,

    selectedServiceDateOption,
    selectedEInvoiceXmlFormat,
    selectedCreateEInvoiceOption,
    showGeneratedEInvoiceXml,

    lastXmlSaveDirectory,
    lastPdfSaveDirectory,
    lastOpenFileDirectory,
    lastOpenLogoDirectory
)
VALUES (
    1,

    ?,

    ?,
    ?,
    ?,
    ?,

    ?,
    ?,
    ?,
    ?,

    ?,
    ?,
    ?,
    ?
);



CREATE TABLE IF NOT EXISTS ViewInvoiceSettings (
    id INTEGER PRIMARY KEY,

    lastSelectedInvoiceFile TEXT,

    showInvoiceXml INTEGER AS Boolean NOT NULL,
    showPdfDetails INTEGER AS Boolean NOT NULL,
    showEpcQrCode INTEGER AS Boolean NOT NULL
);


getViewInvoiceSettings:
SELECT * FROM ViewInvoiceSettings WHERE id = 1;

upsertViewInvoiceSettings:
INSERT OR REPLACE INTO ViewInvoiceSettings (
    id,

    lastSelectedInvoiceFile,

    showInvoiceXml,
    showPdfDetails,
    showEpcQrCode
)
VALUES (
    1,

    ?,

    ?,
    ?,
    ?
);